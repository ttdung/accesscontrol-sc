"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFinderProxy = void 0;
const plugins_1 = require("hardhat/plugins");
const constants_1 = require("../constants");
const utils_1 = require("../utils");
const getFinderProxy = (finder) => {
    const handler = {
        get(target, property) {
            try {
                if (property !== "setFor" &&
                    (!target.contractPath || !target.contractName)) {
                    throw new plugins_1.HardhatPluginError(constants_1.PLUGIN_NAME, (0, utils_1.useErrorMessage)(`You have to set 'config.finder.contract' option or run 'Finder.setFor()' function before using ${property} function.`));
                }
                // @ts-ignore
                // eslint-disable-next-line @typescript-eslint/no-unsafe-return, prefer-rest-params
                return Reflect.get(...arguments);
            }
            catch (error) {
                if (error instanceof plugins_1.HardhatPluginError) {
                    throw error;
                }
                throw new plugins_1.HardhatPluginError(constants_1.PLUGIN_NAME, (0, utils_1.useErrorMessage)(`Something went wrong with '${property}' in ${target.constructor.name} class\n` +
                    "Error:\n" +
                    `name: ${error?.name}\n` +
                    `message: ${error?.message}\n` +
                    `stack: ${error?.stack}`), error);
            }
        },
    };
    return new Proxy(finder, handler);
};
exports.getFinderProxy = getFinderProxy;
//# sourceMappingURL=extension.js.map