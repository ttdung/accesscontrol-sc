/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FileAccessControl,
  FileAccessControlInterface,
} from "../../contracts/FileAccessControl";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "fileId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "readRule",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "writeList",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "AddFile",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "fileId",
        type: "bytes32",
      },
    ],
    name: "ReadFile",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "proposalId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "fileId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldname",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newname",
        type: "string",
      },
    ],
    name: "UpdateFile",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "proposalId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "fileId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldname",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newname",
        type: "string",
      },
    ],
    name: "UpdateProposal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "newFileId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "oldFileId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "readRule",
        type: "string",
      },
    ],
    name: "UpdateReadRule",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "newFileId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "oldFileId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "writeList",
        type: "address[]",
      },
    ],
    name: "UpdateWriteList",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "fileId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "readRule",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "writeList",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "addFile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalId",
        type: "bytes32",
      },
    ],
    name: "approveProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str1",
        type: "string",
      },
      {
        internalType: "string",
        name: "str2",
        type: "string",
      },
    ],
    name: "compare",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dataOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "files",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "readRule",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "list",
        type: "address[]",
      },
    ],
    name: "isInList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "fileId",
        type: "bytes32",
      },
    ],
    name: "readFile",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isDataOwner",
        type: "bool",
      },
    ],
    name: "setDataOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "fileId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "oldname",
        type: "string",
      },
      {
        internalType: "string",
        name: "newname",
        type: "string",
      },
    ],
    name: "submitUpdateFileProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "writeProposal",
    outputs: [
      {
        internalType: "bytes32",
        name: "fileId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "oldname",
        type: "string",
      },
      {
        internalType: "string",
        name: "newname",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6119098061007e6000396000f3fe6080604052600436106100c25760003560e01c80638da5cb5b1161007f578063a890b7be11610059578063a890b7be1461021d578063f20b5b2c1461023d578063f2fde38b1461025d578063f8790b201461027d57600080fd5b80638da5cb5b146101965780639503cf88146101be57806398c9adff146101ed57600080fd5b8063042a312a146100c75780633a72a9c4146100e95780633a96fdd7146100fc578063407acf57146101315780634d627d8814610151578063715018a614610181575b600080fd5b3480156100d357600080fd5b506100e76100e2366004611039565b61029d565b005b6100e76100f7366004611116565b6103e4565b34801561010857600080fd5b5061011c6101173660046111e6565b610412565b60405190151581526020015b60405180910390f35b34801561013d57600080fd5b506100e761014c36600461124a565b61046c565b34801561015d57600080fd5b5061011c61016c3660046112e9565b60016020526000908152604090205460ff1681565b34801561018d57600080fd5b506100e76108de565b3480156101a257600080fd5b506000546040516001600160a01b039091168152602001610128565b3480156101ca57600080fd5b506101de6101d9366004611116565b6108f2565b6040516101289392919061135b565b3480156101f957600080fd5b5061020d610208366004611116565b610a25565b6040516101289493929190611390565b34801561022957600080fd5b5061011c6102383660046113d8565b610b68565b34801561024957600080fd5b506100e7610258366004611116565b610bcd565b34801561026957600080fd5b506100e76102783660046112e9565b610e17565b34801561028957600080fd5b506100e7610298366004611498565b610e8d565b3360009081526001602052604090205460ff166102f65760405162461bcd60e51b81526020600482015260126024820152712922a8aaa4a922903230ba309037bbb732b960711b60448201526064015b60405180910390fd5b600088815260026020526040902080546001600160a01b0319163317815560010161032287898361155c565b5060008881526002602081905260409091200161034085878361155c565b5061037e88848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610ec092505050565b600088815260026020526040908190206004018290555188907f3e0642ed2c9a291f129ce3736d8e28d75b6665fb730bb7c2116082e34ffd13ed906103d29033908b908b908b908b908b908b908b90611646565b60405180910390a25050505050505050565b60405181907ff9ae523dfccbc09c59a0223bb47ce04ac1262d7ab3b3161cea8926ac81dbee3e90600090a250565b60008160405160200161042591906116d0565b604051602081830303815290604052805190602001208360405160200161044c91906116d0565b604051602081830303815290604052805190602001201490505b92915050565b60008484848460405160200161048594939291906116ec565b60405160208183030381529060405290506000816040516020016104a991906116d0565b6040516020818303038152906040528051906020012090508781146105065760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081c1c9bdc1bdcd85b081251606a1b60448201526064016102ed565b61057e33600260008a815260200190815260200160002060030180548060200260200160405190810160405280929190818152602001828054801561057457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610556575b5050505050610b68565b15156001146105c55760405162461bcd60e51b81526020600482015260136024820152722727903bb934ba32903832b936b4b9b9b4b7b760691b60448201526064016102ed565b600087815260026020526040902060010180546106a091906105e6906114d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610612906114d4565b801561065f5780601f106106345761010080835404028352916020019161065f565b820191906000526020600020905b81548152906001019060200180831161064257829003601f168201915b505050505087878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061041292505050565b15156001146106ea5760405162461bcd60e51b81526020600482015260166024820152754e4f54206d61746368696e672066696c65206e616d6560501b60448201526064016102ed565b61076033600360008a8152602001908152602001600020600301805480602002602001604051908101604052809291908181526020018280548015610574576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610556575050505050610b68565b15156000036108d4576000888152600360208181526040832091820180546001818101835591855291842090910180546001600160a01b03191633179055918a9052888155016107b186888361155c565b5060008881526003602052604090206002016107ce84868361155c565b5060008881526003602052604090819020805491518a917fae0ecc26408637002f5d1e9f1143095aef0d20bd60fe289a7df720f50a0217919161081b91600181019160029091019061178b565b60405180910390a36000888152600360208181526040808420805485526002835290842060040154938c9052908290520154106108d45760008881526003602090815260408083208054845260029283905292206001019161087e9101826117b9565b5060008881526003602052604090819020805491518a917feb903a069c935d0f3438435136ca85414bc56c7b332afcd672fcd634ba5861c3916108cb91600181019160029091019061178b565b60405180910390a35b5050505050505050565b6108e6610f46565b6108f06000610fa0565b565b60036020526000908152604090208054600182018054919291610914906114d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610940906114d4565b801561098d5780601f106109625761010080835404028352916020019161098d565b820191906000526020600020905b81548152906001019060200180831161097057829003601f168201915b5050505050908060020180546109a2906114d4565b80601f01602080910402602001604051908101604052809291908181526020018280546109ce906114d4565b8015610a1b5780601f106109f057610100808354040283529160200191610a1b565b820191906000526020600020905b8154815290600101906020018083116109fe57829003601f168201915b5050505050905083565b600260205260009081526040902080546001820180546001600160a01b039092169291610a51906114d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7d906114d4565b8015610aca5780601f10610a9f57610100808354040283529160200191610aca565b820191906000526020600020905b815481529060010190602001808311610aad57829003601f168201915b505050505090806002018054610adf906114d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0b906114d4565b8015610b585780601f10610b2d57610100808354040283529160200191610b58565b820191906000526020600020905b815481529060010190602001808311610b3b57829003601f168201915b5050505050908060040154905084565b6000805b8251811015610bc357836001600160a01b0316838281518110610b9157610b91611896565b60200260200101516001600160a01b031603610bb1576001915050610466565b80610bbb816118ac565b915050610b6c565b5060009392505050565b600081815260036020818152604080842054845260028252928390209091018054835181840281018401909452808452610c4893339390929190830182828015610574576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610556575050505050610b68565b1515600114610c905760405162461bcd60e51b81526020600482015260146024820152732727903b37ba34b733903832b936b4b9b9b4b7b760611b60448201526064016102ed565b610d063360036000848152602001908152602001600020600301805480602002602001604051908101604052809291908181526020018280548015610574576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610556575050505050610b68565b15610d435760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b60448201526064016102ed565b600081815260036020818152604080842080840180546001810182558187528487200180546001600160a01b03191633179055905485526002835290842060040154938590529190525410610e1457600081815260036020908152604080832080548452600292839052922060010191610dbe9101826117b9565b50600081815260036020526040908190208054915183917feb903a069c935d0f3438435136ca85414bc56c7b332afcd672fcd634ba5861c391610e0b91600181019160029091019061178b565b60405180910390a35b50565b610e1f610f46565b6001600160a01b038116610e845760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ed565b610e1481610fa0565b610e95610f46565b6001600160a01b03919091166000908152600160205260409020805460ff1916911515919091179055565b60005b8151811015610f415760026000848152602001908152602001600020600301828281518110610ef457610ef4611896565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905580610f39816118ac565b915050610ec3565b505050565b6000546001600160a01b031633146108f05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102ed565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f84011261100257600080fd5b50813567ffffffffffffffff81111561101a57600080fd5b60208301915083602082850101111561103257600080fd5b9250929050565b60008060008060008060008060a0898b03121561105557600080fd5b88359750602089013567ffffffffffffffff8082111561107457600080fd5b6110808c838d01610ff0565b909950975060408b013591508082111561109957600080fd5b6110a58c838d01610ff0565b909750955060608b01359150808211156110be57600080fd5b818b0191508b601f8301126110d257600080fd5b8135818111156110e157600080fd5b8c60208260051b85010111156110f657600080fd5b602083019550809450505050608089013590509295985092959890939650565b60006020828403121561112857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561116e5761116e61112f565b604052919050565b600082601f83011261118757600080fd5b813567ffffffffffffffff8111156111a1576111a161112f565b6111b4601f8201601f1916602001611145565b8181528460208386010111156111c957600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156111f957600080fd5b823567ffffffffffffffff8082111561121157600080fd5b61121d86838701611176565b9350602085013591508082111561123357600080fd5b5061124085828601611176565b9150509250929050565b6000806000806000806080878903121561126357600080fd5b8635955060208701359450604087013567ffffffffffffffff8082111561128957600080fd5b6112958a838b01610ff0565b909650945060608901359150808211156112ae57600080fd5b506112bb89828a01610ff0565b979a9699509497509295939492505050565b80356001600160a01b03811681146112e457600080fd5b919050565b6000602082840312156112fb57600080fd5b611304826112cd565b9392505050565b60005b8381101561132657818101518382015260200161130e565b50506000910152565b6000815180845261134781602086016020860161130b565b601f01601f19169290920160200192915050565b838152606060208201526000611374606083018561132f565b8281036040840152611386818561132f565b9695505050505050565b6001600160a01b03851681526080602082018190526000906113b49083018661132f565b82810360408401526113c6818661132f565b91505082606083015295945050505050565b600080604083850312156113eb57600080fd5b6113f4836112cd565b915060208084013567ffffffffffffffff8082111561141257600080fd5b818601915086601f83011261142657600080fd5b8135818111156114385761143861112f565b8060051b9150611449848301611145565b818152918301840191848101908984111561146357600080fd5b938501935b8385101561148857611479856112cd565b82529385019390850190611468565b8096505050505050509250929050565b600080604083850312156114ab57600080fd5b6114b4836112cd565b9150602083013580151581146114c957600080fd5b809150509250929050565b600181811c908216806114e857607f821691505b60208210810361150857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610f4157600081815260208120601f850160051c810160208610156115355750805b601f850160051c820191505b8181101561155457828155600101611541565b505050505050565b67ffffffffffffffff8311156115745761157461112f565b6115888361158283546114d4565b8361150e565b6000601f8411600181146115bc57600085156115a45750838201355b600019600387901b1c1916600186901b178355611616565b600083815260209020601f19861690835b828110156115ed57868501358255602094850194600190920191016115cd565b508682101561160a5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600060018060a01b03808b168352602060a08185015261166a60a085018b8d61161d565b848103604086015261167d818a8c61161d565b8581036060870152878152889150820160005b888110156116b557846116a2846112cd565b1682529183019190830190600101611690565b50809450505050508260808301529998505050505050505050565b600082516116e281846020870161130b565b9190910192915050565b8385823760008482016000815283858237600093019283525090949350505050565b6000815461171b816114d4565b808552602060018381168015611738576001811461175257611780565b60ff1985168884015283151560051b880183019550611780565b866000528260002060005b858110156117785781548a820186015290830190840161175d565b890184019650505b505050505092915050565b60408152600061179e604083018561170e565b82810360208401526117b0818561170e565b95945050505050565b8181036117c4575050565b6117ce82546114d4565b67ffffffffffffffff8111156117e6576117e661112f565b6117fa816117f484546114d4565b8461150e565b6000601f82116001811461182e57600083156118165750848201545b600019600385901b1c1916600184901b178455611616565b600085815260209020601f19841690600086815260209020845b838110156118685782860154825560019586019590910190602001611848565b50858310156118865781850154600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6000600182016118cc57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212207123ef8978f484bb9b5c8a846ee5a14fa9126731c3bec11427f1439125a1794a64736f6c63430008130033";

type FileAccessControlConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FileAccessControlConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FileAccessControl__factory extends ContractFactory {
  constructor(...args: FileAccessControlConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FileAccessControl> {
    return super.deploy(overrides || {}) as Promise<FileAccessControl>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FileAccessControl {
    return super.attach(address) as FileAccessControl;
  }
  override connect(signer: Signer): FileAccessControl__factory {
    return super.connect(signer) as FileAccessControl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FileAccessControlInterface {
    return new utils.Interface(_abi) as FileAccessControlInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FileAccessControl {
    return new Contract(address, _abi, signerOrProvider) as FileAccessControl;
  }
}
