/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FileAccessControl0,
  FileAccessControl0Interface,
} from "../../../contracts/FileAccessControl.sol/FileAccessControl0";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "fileId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "readRule",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "writeList",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "AddFile",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "fileId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldname",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newname",
        type: "string",
      },
    ],
    name: "UpdateFile",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "newFileId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "oldFileId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "readRule",
        type: "string",
      },
    ],
    name: "UpdateReadRule",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "newFileId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "oldFileId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "writeList",
        type: "address[]",
      },
    ],
    name: "UpdateWriteList",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "fileId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "readRule",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "writeList",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "addFile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "fileId",
        type: "bytes32",
      },
    ],
    name: "approveProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dataOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "files",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "readRule",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "list",
        type: "address[]",
      },
    ],
    name: "isInList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isDataOwner",
        type: "bool",
      },
    ],
    name: "setDataOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "fileId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "oldname",
        type: "string",
      },
      {
        internalType: "string",
        name: "newname",
        type: "string",
      },
    ],
    name: "submitUpdateFileProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "writeProposal",
    outputs: [
      {
        internalType: "string",
        name: "oldname",
        type: "string",
      },
      {
        internalType: "string",
        name: "newname",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6112438061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806398c9adff1161007157806398c9adff1461013f578063a890b7be14610162578063bb5ff02014610175578063f20b5b2c14610188578063f2fde38b1461019b578063f8790b20146101ae57600080fd5b8063042a312a146100ae5780634d627d88146100c3578063715018a6146100fb5780638da5cb5b146101035780639503cf881461011e575b600080fd5b6100c16100bc366004610b31565b6101c1565b005b6100e66100d1366004610c2a565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100c1610305565b6000546040516001600160a01b0390911681526020016100f2565b61013161012c366004610c4c565b610319565b6040516100f2929190610cab565b61015261014d366004610c4c565b610445565b6040516100f29493929190610cd9565b6100e6610170366004610d37565b610588565b6100c1610183366004610e0f565b6105ef565b6100c1610196366004610c4c565b610797565b6100c16101a9366004610c2a565b61090f565b6100c16101bc366004610e89565b610985565b3360009081526001602052604090205460ff166102175760405162461bcd60e51b815260206004820152600f60248201526e27b7363c903230ba309037bbb732b960891b60448201526064015b60405180910390fd5b600088815260026020526040902080546001600160a01b03191633178155600101610243878983610f4d565b50600088815260026020819052604090912001610261858783610f4d565b5061029f888484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506109b892505050565b600088815260026020526040908190206004018290555188907f3e0642ed2c9a291f129ce3736d8e28d75b6665fb730bb7c2116082e34ffd13ed906102f39033908b908b908b908b908b908b908b90611037565b60405180910390a25050505050505050565b61030d610a3e565b6103176000610a98565b565b60036020526000908152604090208054819061033490610ec5565b80601f016020809104026020016040519081016040528092919081815260200182805461036090610ec5565b80156103ad5780601f10610382576101008083540402835291602001916103ad565b820191906000526020600020905b81548152906001019060200180831161039057829003601f168201915b5050505050908060010180546103c290610ec5565b80601f01602080910402602001604051908101604052809291908181526020018280546103ee90610ec5565b801561043b5780601f106104105761010080835404028352916020019161043b565b820191906000526020600020905b81548152906001019060200180831161041e57829003601f168201915b5050505050905082565b600260205260009081526040902080546001820180546001600160a01b03909216929161047190610ec5565b80601f016020809104026020016040519081016040528092919081815260200182805461049d90610ec5565b80156104ea5780601f106104bf576101008083540402835291602001916104ea565b820191906000526020600020905b8154815290600101906020018083116104cd57829003601f168201915b5050505050908060020180546104ff90610ec5565b80601f016020809104026020016040519081016040528092919081815260200182805461052b90610ec5565b80156105785780601f1061054d57610100808354040283529160200191610578565b820191906000526020600020905b81548152906001019060200180831161055b57829003601f168201915b5050505050908060040154905084565b6000805b82518110156105e357836001600160a01b03168382815181106105b1576105b16110c1565b60200260200101516001600160a01b0316036105d15760019150506105e9565b806105db816110d7565b91505061058c565b50600090505b92915050565b610667336002600088815260200190815260200160002060030180548060200260200160405190810160405280929190818152602001828054801561065d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161063f575b5050505050610588565b1515600103610752576106e6336003600088815260200190815260200160002060020180548060200260200160405190810160405280929190818152602001828054801561065d576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161063f575050505050610588565b1515600003610752576000858152600360209081526040822060028101805460018101825590845291832090910180546001600160a01b0319163317905590869052610733848683610f4d565b506000858152600360205260409020600101610750828483610f4d565b505b847f07471289bbb825ced2b27f90bd8e432d5f212fd699d949b2f3c59b2d8585ff718585858560405161078894939291906110fe565b60405180910390a25050505050565b61080d336002600084815260200190815260200160002060030180548060200260200160405190810160405280929190818152602001828054801561065d576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161063f575050505050610588565b151560010361090c5761088c336003600084815260200190815260200160002060020180548060200260200160405190810160405280929190818152602001828054801561065d576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161063f575050505050610588565b151560000361090c576000818152600360208181526040808420600290810180546001810182558187528487200180546001600160a01b0319163317905586865290835293206004015491905290541061090c576000818152600360209081526040808320600290925290912060019081019161090a910182611130565b505b50565b610917610a3e565b6001600160a01b03811661097c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161020e565b61090c81610a98565b61098d610a3e565b6001600160a01b03919091166000908152600160205260409020805460ff1916911515919091179055565b60005b8151811015610a3957600260008481526020019081526020016000206003018282815181106109ec576109ec6110c1565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905580610a31816110d7565b9150506109bb565b505050565b6000546001600160a01b031633146103175760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161020e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008083601f840112610afa57600080fd5b50813567ffffffffffffffff811115610b1257600080fd5b602083019150836020828501011115610b2a57600080fd5b9250929050565b60008060008060008060008060a0898b031215610b4d57600080fd5b88359750602089013567ffffffffffffffff80821115610b6c57600080fd5b610b788c838d01610ae8565b909950975060408b0135915080821115610b9157600080fd5b610b9d8c838d01610ae8565b909750955060608b0135915080821115610bb657600080fd5b818b0191508b601f830112610bca57600080fd5b813581811115610bd957600080fd5b8c60208260051b8501011115610bee57600080fd5b602083019550809450505050608089013590509295985092959890939650565b80356001600160a01b0381168114610c2557600080fd5b919050565b600060208284031215610c3c57600080fd5b610c4582610c0e565b9392505050565b600060208284031215610c5e57600080fd5b5035919050565b6000815180845260005b81811015610c8b57602081850181015186830182015201610c6f565b506000602082860101526020601f19601f83011685010191505092915050565b604081526000610cbe6040830185610c65565b8281036020840152610cd08185610c65565b95945050505050565b6001600160a01b0385168152608060208201819052600090610cfd90830186610c65565b8281036040840152610d0f8186610c65565b91505082606083015295945050505050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610d4a57600080fd5b610d5383610c0e565b915060208084013567ffffffffffffffff80821115610d7157600080fd5b818601915086601f830112610d8557600080fd5b813581811115610d9757610d97610d21565b8060051b604051601f19603f83011681018181108582111715610dbc57610dbc610d21565b604052918252848201925083810185019189831115610dda57600080fd5b938501935b82851015610dff57610df085610c0e565b84529385019392850192610ddf565b8096505050505050509250929050565b600080600080600060608688031215610e2757600080fd5b85359450602086013567ffffffffffffffff80821115610e4657600080fd5b610e5289838a01610ae8565b90965094506040880135915080821115610e6b57600080fd5b50610e7888828901610ae8565b969995985093965092949392505050565b60008060408385031215610e9c57600080fd5b610ea583610c0e565b915060208301358015158114610eba57600080fd5b809150509250929050565b600181811c90821680610ed957607f821691505b602082108103610ef957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a3957600081815260208120601f850160051c81016020861015610f265750805b601f850160051c820191505b81811015610f4557828155600101610f32565b505050505050565b67ffffffffffffffff831115610f6557610f65610d21565b610f7983610f738354610ec5565b83610eff565b6000601f841160018114610fad5760008515610f955750838201355b600019600387901b1c1916600186901b178355611007565b600083815260209020601f19861690835b82811015610fde5786850135825560209485019460019092019101610fbe565b5086821015610ffb5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600060018060a01b03808b168352602060a08185015261105b60a085018b8d61100e565b848103604086015261106e818a8c61100e565b8581036060870152878152889150820160005b888110156110a6578461109384610c0e565b1682529183019190830190600101611081565b50809450505050508260808301529998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016110f757634e487b7160e01b600052601160045260246000fd5b5060010190565b60408152600061111260408301868861100e565b828103602084015261112581858761100e565b979650505050505050565b81810361113b575050565b6111458254610ec5565b67ffffffffffffffff81111561115d5761115d610d21565b6111718161116b8454610ec5565b84610eff565b6000601f8211600181146111a5576000831561118d5750848201545b600019600385901b1c1916600184901b178455611007565b600085815260209020601f19841690600086815260209020845b838110156111df57828601548255600195860195909101906020016111bf565b50858310156111fd5781850154600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212207a36a03ddf607f7bfdff808d9a71c7eaea5351dbe6fcfd40c9b2c3804f7214fa64736f6c63430008130033";

type FileAccessControl0ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FileAccessControl0ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FileAccessControl0__factory extends ContractFactory {
  constructor(...args: FileAccessControl0ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FileAccessControl0> {
    return super.deploy(overrides || {}) as Promise<FileAccessControl0>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FileAccessControl0 {
    return super.attach(address) as FileAccessControl0;
  }
  override connect(signer: Signer): FileAccessControl0__factory {
    return super.connect(signer) as FileAccessControl0__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FileAccessControl0Interface {
    return new utils.Interface(_abi) as FileAccessControl0Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FileAccessControl0 {
    return new Contract(address, _abi, signerOrProvider) as FileAccessControl0;
  }
}
